{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8765510,"sourceType":"datasetVersion","datasetId":5266942}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Problem Statement: Predict the usefulness of medicines\n\n## Consider that you are a medical student with a deep interest in technology. Some members of the Medicine Review team have asked you to help them to review each medicine and assign a usefulness score. You are required to build a model that can understand the description of medicines and assign a usefulness score automatically. ","metadata":{}},{"cell_type":"markdown","source":"## Load the Dataset","metadata":{}},{"cell_type":"code","source":"from warnings import filterwarnings\nfilterwarnings('ignore')","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:24.731607Z","iopub.execute_input":"2024-06-24T10:22:24.732141Z","iopub.status.idle":"2024-06-24T10:22:24.774256Z","shell.execute_reply.started":"2024-06-24T10:22:24.732088Z","shell.execute_reply":"2024-06-24T10:22:24.772873Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"# Importing libraries\nimport numpy as np \nimport pandas as pd \nimport os","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-24T10:22:24.776638Z","iopub.execute_input":"2024-06-24T10:22:24.777126Z","iopub.status.idle":"2024-06-24T10:22:25.426413Z","shell.execute_reply.started":"2024-06-24T10:22:24.777082Z","shell.execute_reply":"2024-06-24T10:22:25.425027Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"train = pd.read_csv('/kaggle/input/medicine-review-dataset/train.csv')\ntest = pd.read_csv('/kaggle/input/medicine-review-dataset/test.csv')","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:25.427858Z","iopub.execute_input":"2024-06-24T10:22:25.428409Z","iopub.status.idle":"2024-06-24T10:22:25.705499Z","shell.execute_reply.started":"2024-06-24T10:22:25.428375Z","shell.execute_reply":"2024-06-24T10:22:25.703768Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"test.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:25.708273Z","iopub.execute_input":"2024-06-24T10:22:25.709213Z","iopub.status.idle":"2024-06-24T10:22:25.745870Z","shell.execute_reply.started":"2024-06-24T10:22:25.709131Z","shell.execute_reply":"2024-06-24T10:22:25.744682Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"  medicine_no  disease_type  \\\n0    MD-49997           555   \n1    MD-49998           472   \n2    MD-49999           308   \n3    MD-50000           352   \n4    MD-50001           121   \n\n                                     medicine_review  market_value launch_date  \n0  I came back from Cuba with a sinus infection a...            10   23-Jan-14  \n1  I just had my first injection both knees a few...            10   17-Jun-16  \n2  Doesn&#039;t work to lower blood pressure. I s...             2   25-Jul-15  \n3  TRAZODONE, gives nasty neck &amp; headaches to...             1   16-Jun-16  \n4  I was on this pill for 4 years. The side effec...             3   01-Aug-15  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>medicine_no</th>\n      <th>disease_type</th>\n      <th>medicine_review</th>\n      <th>market_value</th>\n      <th>launch_date</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>MD-49997</td>\n      <td>555</td>\n      <td>I came back from Cuba with a sinus infection a...</td>\n      <td>10</td>\n      <td>23-Jan-14</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>MD-49998</td>\n      <td>472</td>\n      <td>I just had my first injection both knees a few...</td>\n      <td>10</td>\n      <td>17-Jun-16</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>MD-49999</td>\n      <td>308</td>\n      <td>Doesn&amp;#039;t work to lower blood pressure. I s...</td>\n      <td>2</td>\n      <td>25-Jul-15</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>MD-50000</td>\n      <td>352</td>\n      <td>TRAZODONE, gives nasty neck &amp;amp; headaches to...</td>\n      <td>1</td>\n      <td>16-Jun-16</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>MD-50001</td>\n      <td>121</td>\n      <td>I was on this pill for 4 years. The side effec...</td>\n      <td>3</td>\n      <td>01-Aug-15</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:25.749827Z","iopub.execute_input":"2024-06-24T10:22:25.750702Z","iopub.status.idle":"2024-06-24T10:22:25.774606Z","shell.execute_reply.started":"2024-06-24T10:22:25.750647Z","shell.execute_reply":"2024-06-24T10:22:25.773426Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"  medicine_no  disease_type  \\\n0    MD-22117           677   \n1    MD-22118           121   \n2    MD-22119           200   \n3    MD-22120           455   \n4    MD-22121           404   \n\n                                     medicine_review  market_value  \\\n0  I read so many horrible reviews of this that I...            10   \n1  When I took the pill, I had a hard time rememb...             8   \n2  This is the only antidepressant that was  bene...             9   \n3  I took Alli for 2 months when it first came ou...             7   \n4  About ten days or two weeks after starting Est...            10   \n\n  launch_date  score  \n0   19-Mar-16     19  \n1   28-Oct-13     21  \n2   01-Jun-17     34  \n3   13-May-08     98  \n4   13-Dec-09     43  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>medicine_no</th>\n      <th>disease_type</th>\n      <th>medicine_review</th>\n      <th>market_value</th>\n      <th>launch_date</th>\n      <th>score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>MD-22117</td>\n      <td>677</td>\n      <td>I read so many horrible reviews of this that I...</td>\n      <td>10</td>\n      <td>19-Mar-16</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>MD-22118</td>\n      <td>121</td>\n      <td>When I took the pill, I had a hard time rememb...</td>\n      <td>8</td>\n      <td>28-Oct-13</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>MD-22119</td>\n      <td>200</td>\n      <td>This is the only antidepressant that was  bene...</td>\n      <td>9</td>\n      <td>01-Jun-17</td>\n      <td>34</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>MD-22120</td>\n      <td>455</td>\n      <td>I took Alli for 2 months when it first came ou...</td>\n      <td>7</td>\n      <td>13-May-08</td>\n      <td>98</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>MD-22121</td>\n      <td>404</td>\n      <td>About ten days or two weeks after starting Est...</td>\n      <td>10</td>\n      <td>13-Dec-09</td>\n      <td>43</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## Exploring the dataset and performing data quality checks","metadata":{}},{"cell_type":"code","source":"train.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:55:06.044927Z","iopub.execute_input":"2024-06-24T10:55:06.045414Z","iopub.status.idle":"2024-06-24T10:55:06.074676Z","shell.execute_reply.started":"2024-06-24T10:55:06.045380Z","shell.execute_reply":"2024-06-24T10:55:06.073298Z"},"trusted":true},"execution_count":44,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 9852 entries, 0 to 9851\nData columns (total 6 columns):\n #   Column           Non-Null Count  Dtype  \n---  ------           --------------  -----  \n 0   medicine_no      9852 non-null   object \n 1   disease_type     9852 non-null   int64  \n 2   medicine_review  9852 non-null   object \n 3   market_value     9852 non-null   int64  \n 4   launch_date      9852 non-null   object \n 5   score            9852 non-null   float64\ndtypes: float64(1), int64(2), object(3)\nmemory usage: 461.9+ KB\n","output_type":"stream"}]},{"cell_type":"code","source":"train.columns","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:55:17.140941Z","iopub.execute_input":"2024-06-24T10:55:17.141382Z","iopub.status.idle":"2024-06-24T10:55:17.150064Z","shell.execute_reply.started":"2024-06-24T10:55:17.141347Z","shell.execute_reply":"2024-06-24T10:55:17.148731Z"},"trusted":true},"execution_count":45,"outputs":[{"execution_count":45,"output_type":"execute_result","data":{"text/plain":"Index(['medicine_no', 'disease_type', 'medicine_review', 'market_value',\n       'launch_date', 'score'],\n      dtype='object')"},"metadata":{}}]},{"cell_type":"code","source":"train.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:55:27.226065Z","iopub.execute_input":"2024-06-24T10:55:27.226514Z","iopub.status.idle":"2024-06-24T10:55:27.235135Z","shell.execute_reply.started":"2024-06-24T10:55:27.226481Z","shell.execute_reply":"2024-06-24T10:55:27.233525Z"},"trusted":true},"execution_count":47,"outputs":[{"execution_count":47,"output_type":"execute_result","data":{"text/plain":"(9852, 6)"},"metadata":{}}]},{"cell_type":"code","source":"# checking for missing values\ntrain.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:56:07.072120Z","iopub.execute_input":"2024-06-24T10:56:07.072612Z","iopub.status.idle":"2024-06-24T10:56:07.091244Z","shell.execute_reply.started":"2024-06-24T10:56:07.072578Z","shell.execute_reply":"2024-06-24T10:56:07.089434Z"},"trusted":true},"execution_count":48,"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"medicine_no        0\ndisease_type       0\nmedicine_review    0\nmarket_value       0\nlaunch_date        0\nscore              0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# checking for duplicated rows\ntrain.duplicated().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:56:35.169458Z","iopub.execute_input":"2024-06-24T10:56:35.169940Z","iopub.status.idle":"2024-06-24T10:56:35.199355Z","shell.execute_reply.started":"2024-06-24T10:56:35.169895Z","shell.execute_reply":"2024-06-24T10:56:35.197904Z"},"trusted":true},"execution_count":50,"outputs":[{"execution_count":50,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}]},{"cell_type":"code","source":"# checking for type of textual information in medicine review column\ntrain['medicine_review']","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:57:26.808747Z","iopub.execute_input":"2024-06-24T10:57:26.809155Z","iopub.status.idle":"2024-06-24T10:57:26.819712Z","shell.execute_reply.started":"2024-06-24T10:57:26.809124Z","shell.execute_reply":"2024-06-24T10:57:26.818018Z"},"trusted":true},"execution_count":51,"outputs":[{"execution_count":51,"output_type":"execute_result","data":{"text/plain":"0       i read so many horrible reviews of this that i...\n1       when i took the pill i had a hard time remembe...\n2       this is the only antidepressant that was  bene...\n3       i took alli for  months when it first came out...\n4       about ten days or two weeks after starting est...\n                              ...                        \n9847    ive only been using brintellix for  week but i...\n9848    awesome results  i rarely have cold sores  rou...\n9849    i had a serious problems with gerd chest pain ...\n9850    i had many symptoms at first especially imbala...\n9851    i didnt like my lips looking like sandpaper fo...\nName: medicine_review, Length: 9852, dtype: object"},"metadata":{}}]},{"cell_type":"markdown","source":"## There are some special characters and numbers in medicine review column. I am using Regex Expressions to replace these special characters and extract proper text information","metadata":{}},{"cell_type":"code","source":"import re\n# pattern to remove special characters and numbers from medicine review column\ntrain['medicine_review'] = train['medicine_review'].str.lower()\npattern = r'[^a-z\\s]'\ntrain['medicine_review'] =  train['medicine_review'].replace(pattern,'',regex=True)\ntrain['medicine_review']","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:25.776487Z","iopub.execute_input":"2024-06-24T10:22:25.777264Z","iopub.status.idle":"2024-06-24T10:22:26.020300Z","shell.execute_reply.started":"2024-06-24T10:22:25.777221Z","shell.execute_reply":"2024-06-24T10:22:26.018951Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"0       i read so many horrible reviews of this that i...\n1       when i took the pill i had a hard time remembe...\n2       this is the only antidepressant that was  bene...\n3       i took alli for  months when it first came out...\n4       about ten days or two weeks after starting est...\n                              ...                        \n9847    ive only been using brintellix for  week but i...\n9848    awesome results  i rarely have cold sores  rou...\n9849    i had a serious problems with gerd chest pain ...\n9850    i had many symptoms at first especially imbala...\n9851    i didnt like my lips looking like sandpaper fo...\nName: medicine_review, Length: 9852, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"train.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:26.022259Z","iopub.execute_input":"2024-06-24T10:22:26.022689Z","iopub.status.idle":"2024-06-24T10:22:26.037110Z","shell.execute_reply.started":"2024-06-24T10:22:26.022648Z","shell.execute_reply":"2024-06-24T10:22:26.035727Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"  medicine_no  disease_type  \\\n0    MD-22117           677   \n1    MD-22118           121   \n2    MD-22119           200   \n3    MD-22120           455   \n4    MD-22121           404   \n\n                                     medicine_review  market_value  \\\n0  i read so many horrible reviews of this that i...            10   \n1  when i took the pill i had a hard time remembe...             8   \n2  this is the only antidepressant that was  bene...             9   \n3  i took alli for  months when it first came out...             7   \n4  about ten days or two weeks after starting est...            10   \n\n  launch_date  score  \n0   19-Mar-16     19  \n1   28-Oct-13     21  \n2   01-Jun-17     34  \n3   13-May-08     98  \n4   13-Dec-09     43  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>medicine_no</th>\n      <th>disease_type</th>\n      <th>medicine_review</th>\n      <th>market_value</th>\n      <th>launch_date</th>\n      <th>score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>MD-22117</td>\n      <td>677</td>\n      <td>i read so many horrible reviews of this that i...</td>\n      <td>10</td>\n      <td>19-Mar-16</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>MD-22118</td>\n      <td>121</td>\n      <td>when i took the pill i had a hard time remembe...</td>\n      <td>8</td>\n      <td>28-Oct-13</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>MD-22119</td>\n      <td>200</td>\n      <td>this is the only antidepressant that was  bene...</td>\n      <td>9</td>\n      <td>01-Jun-17</td>\n      <td>34</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>MD-22120</td>\n      <td>455</td>\n      <td>i took alli for  months when it first came out...</td>\n      <td>7</td>\n      <td>13-May-08</td>\n      <td>98</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>MD-22121</td>\n      <td>404</td>\n      <td>about ten days or two weeks after starting est...</td>\n      <td>10</td>\n      <td>13-Dec-09</td>\n      <td>43</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## Data Pre-Processing\n1. Using TFID Vectorization for text extraction\n2. Scaling target feature - score column ","metadata":{}},{"cell_type":"markdown","source":"### Using TFIDF Vectorizer for text feature extraction\nTFIDF: Term Frequency-Inverse Document Frequency \n\nIt converts text into numerical vectors that represent the importance of words","metadata":{}},{"cell_type":"code","source":"from sklearn.feature_extraction.text import TfidfVectorizer\ntfidf = TfidfVectorizer()\n# train dataset\nX = tfidf.fit_transform(train['medicine_review']).toarray()","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:26.038942Z","iopub.execute_input":"2024-06-24T10:22:26.039549Z","iopub.status.idle":"2024-06-24T10:22:30.060215Z","shell.execute_reply.started":"2024-06-24T10:22:26.039483Z","shell.execute_reply":"2024-06-24T10:22:30.058508Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"X","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:30.061803Z","iopub.execute_input":"2024-06-24T10:22:30.062210Z","iopub.status.idle":"2024-06-24T10:22:30.071620Z","shell.execute_reply.started":"2024-06-24T10:22:30.062158Z","shell.execute_reply":"2024-06-24T10:22:30.070200Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"array([[0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       ...,\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.]])"},"metadata":{}}]},{"cell_type":"code","source":"X.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:30.073527Z","iopub.execute_input":"2024-06-24T10:22:30.074021Z","iopub.status.idle":"2024-06-24T10:22:30.094352Z","shell.execute_reply.started":"2024-06-24T10:22:30.073983Z","shell.execute_reply":"2024-06-24T10:22:30.092617Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"(9852, 18658)"},"metadata":{}}]},{"cell_type":"markdown","source":"### Using MinMax scaler to scale 'score' column","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\n\ntrain['score'] = scaler.fit_transform(train['score'].values.reshape(-1,1))\ntrain['score']","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:30.096413Z","iopub.execute_input":"2024-06-24T10:22:30.096870Z","iopub.status.idle":"2024-06-24T10:22:30.112610Z","shell.execute_reply.started":"2024-06-24T10:22:30.096835Z","shell.execute_reply":"2024-06-24T10:22:30.110687Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"0       0.039916\n1       0.044118\n2       0.071429\n3       0.205882\n4       0.090336\n          ...   \n9847    0.107143\n9848    0.092437\n9849    0.153361\n9850    0.012605\n9851    0.035714\nName: score, Length: 9852, dtype: float64"},"metadata":{}}]},{"cell_type":"code","source":"Y = train['score']\nY.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:30.114564Z","iopub.execute_input":"2024-06-24T10:22:30.115039Z","iopub.status.idle":"2024-06-24T10:22:30.126318Z","shell.execute_reply.started":"2024-06-24T10:22:30.115000Z","shell.execute_reply":"2024-06-24T10:22:30.124564Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"0    0.039916\n1    0.044118\n2    0.071429\n3    0.205882\n4    0.090336\nName: score, dtype: float64"},"metadata":{}}]},{"cell_type":"markdown","source":"## Performing Train Test Split to divide training dataset into train part and test part. \nThis helps the model to not overfit","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nxtrain, xtest, ytrain, ytest = train_test_split(X,Y,train_size=0.75,test_size=0.25,random_state=21)","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:30.127833Z","iopub.execute_input":"2024-06-24T10:22:30.128287Z","iopub.status.idle":"2024-06-24T10:22:31.461327Z","shell.execute_reply.started":"2024-06-24T10:22:30.128252Z","shell.execute_reply":"2024-06-24T10:22:31.459798Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"xtrain.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:31.466876Z","iopub.execute_input":"2024-06-24T10:22:31.467362Z","iopub.status.idle":"2024-06-24T10:22:31.476201Z","shell.execute_reply.started":"2024-06-24T10:22:31.467325Z","shell.execute_reply":"2024-06-24T10:22:31.474568Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"(7389, 18658)"},"metadata":{}}]},{"cell_type":"code","source":"xtest.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:31.478121Z","iopub.execute_input":"2024-06-24T10:22:31.479367Z","iopub.status.idle":"2024-06-24T10:22:31.489080Z","shell.execute_reply.started":"2024-06-24T10:22:31.479327Z","shell.execute_reply":"2024-06-24T10:22:31.487782Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"(2463, 18658)"},"metadata":{}}]},{"cell_type":"code","source":"ytrain.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:31.490979Z","iopub.execute_input":"2024-06-24T10:22:31.491446Z","iopub.status.idle":"2024-06-24T10:22:31.503450Z","shell.execute_reply.started":"2024-06-24T10:22:31.491411Z","shell.execute_reply":"2024-06-24T10:22:31.502005Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"(7389,)"},"metadata":{}}]},{"cell_type":"code","source":"ytest.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:31.505626Z","iopub.execute_input":"2024-06-24T10:22:31.506241Z","iopub.status.idle":"2024-06-24T10:22:31.515827Z","shell.execute_reply.started":"2024-06-24T10:22:31.506196Z","shell.execute_reply":"2024-06-24T10:22:31.514510Z"},"trusted":true},"execution_count":17,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"(2463,)"},"metadata":{}}]},{"cell_type":"markdown","source":"## Building the neural network model\nModel Used: Sequential\n\nEvaluation Used: RMSE","metadata":{}},{"cell_type":"code","source":"from keras.models import Sequential\nfrom keras.layers import Dense,Dropout,BatchNormalization\nfrom keras.callbacks import EarlyStopping","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:31.517590Z","iopub.execute_input":"2024-06-24T10:22:31.518018Z","iopub.status.idle":"2024-06-24T10:22:47.458166Z","shell.execute_reply.started":"2024-06-24T10:22:31.517986Z","shell.execute_reply":"2024-06-24T10:22:47.456526Z"},"trusted":true},"execution_count":18,"outputs":[{"name":"stderr","text":"2024-06-24 10:22:34.028705: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-06-24 10:22:34.028945: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-06-24 10:22:34.200348: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"}]},{"cell_type":"code","source":"nn = Sequential()\n\nnn.add(Dense(256,input_dim=xtrain.shape[1],activation='relu'))\nnn.add(Dropout(0.5))\n\nnn.add(Dense(128,activation='relu'))\nnn.add(Dropout(0.5))\n\nnn.add(Dense(1,activation='linear'))","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:47.460117Z","iopub.execute_input":"2024-06-24T10:22:47.461161Z","iopub.status.idle":"2024-06-24T10:22:47.645559Z","shell.execute_reply.started":"2024-06-24T10:22:47.461101Z","shell.execute_reply":"2024-06-24T10:22:47.644272Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"nn.summary()","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:47.647166Z","iopub.execute_input":"2024-06-24T10:22:47.647580Z","iopub.status.idle":"2024-06-24T10:22:47.676705Z","shell.execute_reply.started":"2024-06-24T10:22:47.647546Z","shell.execute_reply":"2024-06-24T10:22:47.675115Z"},"trusted":true},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m256\u001b[0m)            │     \u001b[38;5;34m4,776,704\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout (\u001b[38;5;33mDropout\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m256\u001b[0m)            │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)            │        \u001b[38;5;34m32,896\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_1 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)            │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_2 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m129\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)            │     <span style=\"color: #00af00; text-decoration-color: #00af00\">4,776,704</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)            │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)            │        <span style=\"color: #00af00; text-decoration-color: #00af00\">32,896</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)            │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">129</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m4,809,729\u001b[0m (18.35 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">4,809,729</span> (18.35 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m4,809,729\u001b[0m (18.35 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">4,809,729</span> (18.35 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"early_stop = EarlyStopping(monitor='val_loss',patience=10)","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:47.678337Z","iopub.execute_input":"2024-06-24T10:22:47.678733Z","iopub.status.idle":"2024-06-24T10:22:47.685512Z","shell.execute_reply.started":"2024-06-24T10:22:47.678700Z","shell.execute_reply":"2024-06-24T10:22:47.683788Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"## Evaluation criteria is based on Root Mean Squared Error. Importing RMSE from keras metrics\nfrom keras.metrics import RootMeanSquaredError","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:47.687548Z","iopub.execute_input":"2024-06-24T10:22:47.688014Z","iopub.status.idle":"2024-06-24T10:22:47.699570Z","shell.execute_reply.started":"2024-06-24T10:22:47.687974Z","shell.execute_reply":"2024-06-24T10:22:47.698117Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"code","source":"nn.compile(loss='mse',optimizer='adam',metrics=[RootMeanSquaredError()])","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:47.701277Z","iopub.execute_input":"2024-06-24T10:22:47.701690Z","iopub.status.idle":"2024-06-24T10:22:47.729002Z","shell.execute_reply.started":"2024-06-24T10:22:47.701659Z","shell.execute_reply":"2024-06-24T10:22:47.727698Z"},"trusted":true},"execution_count":23,"outputs":[]},{"cell_type":"code","source":"hist = nn.fit(xtrain,ytrain,\n             validation_split=0.2,\n             batch_size=8,\n             epochs=100,\n             callbacks=[early_stop])","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:22:47.730519Z","iopub.execute_input":"2024-06-24T10:22:47.730871Z","iopub.status.idle":"2024-06-24T10:28:30.469948Z","shell.execute_reply.started":"2024-06-24T10:22:47.730842Z","shell.execute_reply":"2024-06-24T10:28:30.468544Z"},"trusted":true},"execution_count":24,"outputs":[{"name":"stdout","text":"Epoch 1/100\n\u001b[1m739/739\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 33ms/step - loss: 0.0056 - root_mean_squared_error: 0.0745 - val_loss: 0.0044 - val_root_mean_squared_error: 0.0663\nEpoch 2/100\n\u001b[1m739/739\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 31ms/step - loss: 0.0038 - root_mean_squared_error: 0.0618 - val_loss: 0.0043 - val_root_mean_squared_error: 0.0659\nEpoch 3/100\n\u001b[1m739/739\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 30ms/step - loss: 0.0025 - root_mean_squared_error: 0.0496 - val_loss: 0.0044 - val_root_mean_squared_error: 0.0660\nEpoch 4/100\n\u001b[1m739/739\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 31ms/step - loss: 0.0022 - root_mean_squared_error: 0.0473 - val_loss: 0.0041 - val_root_mean_squared_error: 0.0636\nEpoch 5/100\n\u001b[1m739/739\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 31ms/step - loss: 0.0018 - root_mean_squared_error: 0.0429 - val_loss: 0.0043 - val_root_mean_squared_error: 0.0659\nEpoch 6/100\n\u001b[1m739/739\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 31ms/step - loss: 0.0016 - root_mean_squared_error: 0.0400 - val_loss: 0.0041 - val_root_mean_squared_error: 0.0642\nEpoch 7/100\n\u001b[1m739/739\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 30ms/step - loss: 0.0017 - root_mean_squared_error: 0.0407 - val_loss: 0.0041 - val_root_mean_squared_error: 0.0642\nEpoch 8/100\n\u001b[1m739/739\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 30ms/step - loss: 0.0014 - root_mean_squared_error: 0.0367 - val_loss: 0.0044 - val_root_mean_squared_error: 0.0660\nEpoch 9/100\n\u001b[1m739/739\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m24s\u001b[0m 32ms/step - loss: 0.0014 - root_mean_squared_error: 0.0369 - val_loss: 0.0043 - val_root_mean_squared_error: 0.0654\nEpoch 10/100\n\u001b[1m739/739\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 31ms/step - loss: 0.0013 - root_mean_squared_error: 0.0359 - val_loss: 0.0042 - val_root_mean_squared_error: 0.0649\nEpoch 11/100\n\u001b[1m739/739\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 31ms/step - loss: 0.0010 - root_mean_squared_error: 0.0318 - val_loss: 0.0041 - val_root_mean_squared_error: 0.0641\nEpoch 12/100\n\u001b[1m739/739\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 31ms/step - loss: 0.0012 - root_mean_squared_error: 0.0341 - val_loss: 0.0041 - val_root_mean_squared_error: 0.0638\nEpoch 13/100\n\u001b[1m739/739\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 30ms/step - loss: 0.0011 - root_mean_squared_error: 0.0328 - val_loss: 0.0044 - val_root_mean_squared_error: 0.0660\nEpoch 14/100\n\u001b[1m739/739\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m42s\u001b[0m 31ms/step - loss: 0.0017 - root_mean_squared_error: 0.0411 - val_loss: 0.0042 - val_root_mean_squared_error: 0.0644\n","output_type":"stream"}]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nplt.figure(figsize=(12,6))\nplt.plot(hist.history['loss'],label='Train Loss')\nplt.plot(hist.history['val_loss'],label='Validation Loss')\nplt.xlabel('Epochs')\nplt.ylabel('Mean Squared Error(MSE)')\nplt.legend()\nplt.grid()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:28:30.471442Z","iopub.execute_input":"2024-06-24T10:28:30.471767Z","iopub.status.idle":"2024-06-24T10:28:30.855339Z","shell.execute_reply.started":"2024-06-24T10:28:30.471740Z","shell.execute_reply":"2024-06-24T10:28:30.854101Z"},"trusted":true},"execution_count":25,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"## Evaluation criteria : RMSE","metadata":{}},{"cell_type":"code","source":"import numpy as np\nfrom sklearn.metrics import mean_squared_error","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:28:30.856578Z","iopub.execute_input":"2024-06-24T10:28:30.856903Z","iopub.status.idle":"2024-06-24T10:28:30.863794Z","shell.execute_reply.started":"2024-06-24T10:28:30.856875Z","shell.execute_reply":"2024-06-24T10:28:30.862491Z"},"trusted":true},"execution_count":26,"outputs":[]},{"cell_type":"code","source":"ypred_test = nn.predict(xtest)","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:28:30.865310Z","iopub.execute_input":"2024-06-24T10:28:30.865735Z","iopub.status.idle":"2024-06-24T10:28:31.969497Z","shell.execute_reply.started":"2024-06-24T10:28:30.865693Z","shell.execute_reply":"2024-06-24T10:28:31.968296Z"},"trusted":true},"execution_count":27,"outputs":[{"name":"stdout","text":"\u001b[1m77/77\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"rmse = np.sqrt(mean_squared_error(ytest,ypred_test))\nscore = max(0,100-rmse)\nscore","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:28:31.971857Z","iopub.execute_input":"2024-06-24T10:28:31.972352Z","iopub.status.idle":"2024-06-24T10:28:31.982439Z","shell.execute_reply.started":"2024-06-24T10:28:31.972310Z","shell.execute_reply":"2024-06-24T10:28:31.980926Z"},"trusted":true},"execution_count":28,"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"99.93710495190692"},"metadata":{}}]},{"cell_type":"markdown","source":"## Score using max(0,100-RMSE(actual_values,predicted_values)) is very good . We can consider this model for out of sample predictions","metadata":{}},{"cell_type":"markdown","source":"## Predicting out of sample data : test dataset","metadata":{}},{"cell_type":"code","source":"test.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:28:31.984015Z","iopub.execute_input":"2024-06-24T10:28:31.984363Z","iopub.status.idle":"2024-06-24T10:28:32.001039Z","shell.execute_reply.started":"2024-06-24T10:28:31.984334Z","shell.execute_reply":"2024-06-24T10:28:31.999755Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"  medicine_no  disease_type  \\\n0    MD-49997           555   \n1    MD-49998           472   \n2    MD-49999           308   \n3    MD-50000           352   \n4    MD-50001           121   \n\n                                     medicine_review  market_value launch_date  \n0  I came back from Cuba with a sinus infection a...            10   23-Jan-14  \n1  I just had my first injection both knees a few...            10   17-Jun-16  \n2  Doesn&#039;t work to lower blood pressure. I s...             2   25-Jul-15  \n3  TRAZODONE, gives nasty neck &amp; headaches to...             1   16-Jun-16  \n4  I was on this pill for 4 years. The side effec...             3   01-Aug-15  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>medicine_no</th>\n      <th>disease_type</th>\n      <th>medicine_review</th>\n      <th>market_value</th>\n      <th>launch_date</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>MD-49997</td>\n      <td>555</td>\n      <td>I came back from Cuba with a sinus infection a...</td>\n      <td>10</td>\n      <td>23-Jan-14</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>MD-49998</td>\n      <td>472</td>\n      <td>I just had my first injection both knees a few...</td>\n      <td>10</td>\n      <td>17-Jun-16</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>MD-49999</td>\n      <td>308</td>\n      <td>Doesn&amp;#039;t work to lower blood pressure. I s...</td>\n      <td>2</td>\n      <td>25-Jul-15</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>MD-50000</td>\n      <td>352</td>\n      <td>TRAZODONE, gives nasty neck &amp;amp; headaches to...</td>\n      <td>1</td>\n      <td>16-Jun-16</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>MD-50001</td>\n      <td>121</td>\n      <td>I was on this pill for 4 years. The side effec...</td>\n      <td>3</td>\n      <td>01-Aug-15</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Replacing the special characters and numbers using regex expression for test dataset\ntest['medicine_review'] = test['medicine_review'].str.lower()\ntest['medicine_review'] =  test['medicine_review'].replace(pattern,'',regex=True)\ntest.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:28:32.002663Z","iopub.execute_input":"2024-06-24T10:28:32.003128Z","iopub.status.idle":"2024-06-24T10:28:32.095468Z","shell.execute_reply.started":"2024-06-24T10:28:32.003086Z","shell.execute_reply":"2024-06-24T10:28:32.094301Z"},"trusted":true},"execution_count":30,"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"  medicine_no  disease_type  \\\n0    MD-49997           555   \n1    MD-49998           472   \n2    MD-49999           308   \n3    MD-50000           352   \n4    MD-50001           121   \n\n                                     medicine_review  market_value launch_date  \n0  i came back from cuba with a sinus infection a...            10   23-Jan-14  \n1  i just had my first injection both knees a few...            10   17-Jun-16  \n2  doesnt work to lower blood pressure i started ...             2   25-Jul-15  \n3  trazodone gives nasty neck amp headaches to so...             1   16-Jun-16  \n4  i was on this pill for  years the side effects...             3   01-Aug-15  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>medicine_no</th>\n      <th>disease_type</th>\n      <th>medicine_review</th>\n      <th>market_value</th>\n      <th>launch_date</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>MD-49997</td>\n      <td>555</td>\n      <td>i came back from cuba with a sinus infection a...</td>\n      <td>10</td>\n      <td>23-Jan-14</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>MD-49998</td>\n      <td>472</td>\n      <td>i just had my first injection both knees a few...</td>\n      <td>10</td>\n      <td>17-Jun-16</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>MD-49999</td>\n      <td>308</td>\n      <td>doesnt work to lower blood pressure i started ...</td>\n      <td>2</td>\n      <td>25-Jul-15</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>MD-50000</td>\n      <td>352</td>\n      <td>trazodone gives nasty neck amp headaches to so...</td>\n      <td>1</td>\n      <td>16-Jun-16</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>MD-50001</td>\n      <td>121</td>\n      <td>i was on this pill for  years the side effects...</td>\n      <td>3</td>\n      <td>01-Aug-15</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Performing TFIDF vectorization \nxnew = test[['medicine_no','medicine_review']]\nX_new = tfidf.transform(xnew['medicine_review']).toarray()\nX_new","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:28:32.096919Z","iopub.execute_input":"2024-06-24T10:28:32.097348Z","iopub.status.idle":"2024-06-24T10:28:32.963638Z","shell.execute_reply.started":"2024-06-24T10:28:32.097304Z","shell.execute_reply":"2024-06-24T10:28:32.962269Z"},"trusted":true},"execution_count":31,"outputs":[{"execution_count":31,"output_type":"execute_result","data":{"text/plain":"array([[0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       ...,\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.]])"},"metadata":{}}]},{"cell_type":"code","source":"ypred_new = nn.predict(X_new)\nypred_new","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:32:27.861441Z","iopub.execute_input":"2024-06-24T10:32:27.861952Z","iopub.status.idle":"2024-06-24T10:32:29.284605Z","shell.execute_reply.started":"2024-06-24T10:32:27.861906Z","shell.execute_reply":"2024-06-24T10:32:29.282845Z"},"trusted":true},"execution_count":39,"outputs":[{"name":"stdout","text":"\u001b[1m103/103\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","Cell \u001b[0;32mIn[39], line 3\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mrandom\u001b[39;00m\n\u001b[1;32m      2\u001b[0m ypred_new \u001b[38;5;241m=\u001b[39m nn\u001b[38;5;241m.\u001b[39mpredict(X_new)\n\u001b[0;32m----> 3\u001b[0m \u001b[43mypred_new\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mrandom\u001b[49m()\n","\u001b[0;31mAttributeError\u001b[0m: 'numpy.ndarray' object has no attribute 'random'"],"ename":"AttributeError","evalue":"'numpy.ndarray' object has no attribute 'random'","output_type":"error"}]},{"cell_type":"code","source":"## I have scaled Y -target score using min max scaler. We will have to perform inverse transform to unscale the Y predictions\nypred_original = scaler.inverse_transform(ypred_new.reshape(-1,1))\nypred_original","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:31:26.218210Z","iopub.execute_input":"2024-06-24T10:31:26.219267Z","iopub.status.idle":"2024-06-24T10:31:26.268390Z","shell.execute_reply.started":"2024-06-24T10:31:26.219221Z","shell.execute_reply":"2024-06-24T10:31:26.266626Z"},"trusted":true},"execution_count":38,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","Cell \u001b[0;32mIn[38], line 4\u001b[0m\n\u001b[1;32m      2\u001b[0m ypred_original \u001b[38;5;241m=\u001b[39m scaler\u001b[38;5;241m.\u001b[39minverse_transform(ypred_new\u001b[38;5;241m.\u001b[39mreshape(\u001b[38;5;241m-\u001b[39m\u001b[38;5;241m1\u001b[39m,\u001b[38;5;241m1\u001b[39m))\n\u001b[1;32m      3\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mrandom\u001b[39;00m\n\u001b[0;32m----> 4\u001b[0m \u001b[43mrandom\u001b[49m\u001b[43m(\u001b[49m\u001b[43mypred_original\u001b[49m\u001b[43m)\u001b[49m\n","\u001b[0;31mTypeError\u001b[0m: 'module' object is not callable"],"ename":"TypeError","evalue":"'module' object is not callable","output_type":"error"}]},{"cell_type":"code","source":"submissions = pd.DataFrame({'medicine_no':xnew['medicine_no'],\n                            'score':ypred_original.flatten()}) # flatten() converts 2D array to 1D array\nsubmissions.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:34:07.303533Z","iopub.execute_input":"2024-06-24T10:34:07.303991Z","iopub.status.idle":"2024-06-24T10:34:07.318944Z","shell.execute_reply.started":"2024-06-24T10:34:07.303956Z","shell.execute_reply":"2024-06-24T10:34:07.317693Z"},"trusted":true},"execution_count":41,"outputs":[{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"  medicine_no      score\n0    MD-49997  15.276415\n1    MD-49998  31.808266\n2    MD-49999  20.724796\n3    MD-50000  28.914089\n4    MD-50001  14.296430","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>medicine_no</th>\n      <th>score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>MD-49997</td>\n      <td>15.276415</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>MD-49998</td>\n      <td>31.808266</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>MD-49999</td>\n      <td>20.724796</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>MD-50000</td>\n      <td>28.914089</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>MD-50001</td>\n      <td>14.296430</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"submissions['score'] = submissions['score'].round(0).astype(int)\nsubmissions['score']","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:34:48.457144Z","iopub.execute_input":"2024-06-24T10:34:48.457647Z","iopub.status.idle":"2024-06-24T10:34:48.468973Z","shell.execute_reply.started":"2024-06-24T10:34:48.457613Z","shell.execute_reply":"2024-06-24T10:34:48.467716Z"},"trusted":true},"execution_count":42,"outputs":[{"execution_count":42,"output_type":"execute_result","data":{"text/plain":"0       15\n1       32\n2       21\n3       29\n4       14\n        ..\n3279    26\n3280    31\n3281    13\n3282    20\n3283    32\nName: score, Length: 3284, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"submissions.to_csv('submission.csv',index = False)","metadata":{"execution":{"iopub.status.busy":"2024-06-24T10:34:57.485361Z","iopub.execute_input":"2024-06-24T10:34:57.485792Z","iopub.status.idle":"2024-06-24T10:34:57.500008Z","shell.execute_reply.started":"2024-06-24T10:34:57.485761Z","shell.execute_reply":"2024-06-24T10:34:57.498385Z"},"trusted":true},"execution_count":43,"outputs":[]}]}